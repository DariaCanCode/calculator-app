{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdgzm\\\\Desktop\\\\calculator-app\\\\src\\\\components\\\\Calculator\\\\Calculator.js\";\n// !!IMPORTANT this file contains main functionally of the app and logic\nimport React from \"react\";\nimport \"./Calculator.css\";\nimport Result from \"../Result/Result\";\nimport Input from \"../InputOne/InputOne\";\nimport ComputeButton from \"../ComputeButton/ComputeButton\";\nimport Operation from \"../Operation/Operation\";\nimport api from \"../../utils/api\";\nimport ops from \"../../operations.json\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ops1 = ops.slice(0, 3);\n    this.ops2 = ops.slice(3);\n\n    this.handleMap = x => {\n      return React.createElement(Operation, {\n        choice: x.choice,\n        operation: x.operation,\n        route: x.route,\n        click: this.handleOperator,\n        selected: this.state.operation,\n        key: x.operation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    };\n\n    this.handleOperator = x => {\n      this.setState({\n        operation: x\n      });\n    };\n\n    this.handleInputOne = e => {\n      this.setState({\n        x: e.target.value\n      });\n    };\n\n    this.handleInputTwo = e => {\n      this.setState({\n        y: e.target.value\n      });\n    };\n\n    this.handleApiCall = (operator, x, y) => {\n      api.callProxy(operator, x, y).then(res => {\n        this.setState({\n          result: res.data\n        });\n      }).catch(err => {\n        if (err.code === 400) {\n          return this.setState({\n            result: err.message\n          });\n        }\n\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      result: \"\"\n    };\n    this.handleInputOne = this.handleInputOne.bind(this);\n    this.handleInputTwo = this.handleInputTwo.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calculatorContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Result, {\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleInputOne,\n      placeholder: \"First Value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Input, {\n      onChange: this.handleInputTwo,\n      placeholder: \"Second Value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(ComputeButton, {\n      status: this.state,\n      handleClick: this.handleApiCall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"operationsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.ops1.map(this.handleMap)), React.createElement(\"div\", {\n      className: \"operationsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.ops2.map(this.handleMap))));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["C:\\Users\\jdgzm\\Desktop\\calculator-app\\src\\components\\Calculator\\Calculator.js"],"names":["React","Result","Input","ComputeButton","Operation","api","ops","Calculator","Component","constructor","props","ops1","slice","ops2","handleMap","x","choice","operation","route","handleOperator","state","setState","handleInputOne","e","target","value","handleInputTwo","y","handleApiCall","operator","callProxy","then","res","result","data","catch","err","code","message","console","log","bind","render","map"],"mappings":"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","sourcesContent":["// !!IMPORTANT this file contains main functionally of the app and logic\r\nimport React from \"react\";\r\nimport \"./Calculator.css\";\r\nimport Result from \"../Result/Result\";\r\nimport Input from \"../InputOne/InputOne\";\r\nimport ComputeButton from \"../ComputeButton/ComputeButton\";\r\nimport Operation from \"../Operation/Operation\";\r\nimport api from \"../../utils/api\";\r\nimport ops from \"../../operations.json\";\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { result: \"\" };\r\n    this.handleInputOne = this.handleInputOne.bind(this);\r\n    this.handleInputTwo = this.handleInputTwo.bind(this);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n  }\r\n  ops1 = ops.slice(0, 3);\r\n  ops2 = ops.slice(3);\r\n\r\n  handleMap = x => {\r\n    return (\r\n      <Operation\r\n        choice={x.choice}\r\n        operation={x.operation}\r\n        route={x.route}\r\n        click={this.handleOperator}\r\n        selected={this.state.operation}\r\n        key={x.operation}\r\n      />\r\n    );\r\n  };\r\n\r\n  handleOperator = x => {\r\n    this.setState({ operation: x });\r\n  };\r\n\r\n  handleInputOne = e => {\r\n    this.setState({\r\n      x: e.target.value\r\n    });\r\n  };\r\n\r\n  handleInputTwo = e => {\r\n    this.setState({\r\n      y: e.target.value\r\n    });\r\n  };\r\n\r\n  handleApiCall = (operator, x, y) => {\r\n    api\r\n      .callProxy(operator, x, y)\r\n      .then(res => {\r\n        this.setState({ result: res.data });\r\n      })\r\n      .catch(err => {\r\n        if (err.code === 400) {\r\n          return this.setState({ result: err.message });\r\n        }\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculatorContainer\">\r\n        <div className=\"Calculator\">\r\n          {/* Result will display result of calculation performed by calculator: */}\r\n          <Result value={this.state.result} />\r\n          <div className=\"first\">\r\n            {/* First user input: */}\r\n            <Input onChange={this.handleInputOne} placeholder=\"First Value\" />\r\n            {/* Second user input: */}\r\n            <Input onChange={this.handleInputTwo} placeholder=\"Second Value\" />\r\n            {/* ComputeButton is basically submit button: */}\r\n            <ComputeButton\r\n              status={this.state}\r\n              handleClick={this.handleApiCall}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"operationsContainer\">\r\n            {this.ops1.map(this.handleMap)}\r\n          </div>\r\n          <div className=\"operationsContainer\">\r\n            {this.ops2.map(this.handleMap)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}