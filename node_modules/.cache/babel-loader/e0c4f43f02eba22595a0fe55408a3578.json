{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/calculator-app/src/components/Calculator/Calculator.js\";\n// !!IMPORTANT this file contains main functionally of the app and logic \nimport React from 'react';\nimport './Calculator.css';\nimport Result from '../Result/Result';\nimport InputOne from '../InputOne/InputOne';\nimport InputTwo from '../InputTwo/InputTwo';\nimport ComputeButton from '../ComputeButton/ComputeButton';\nimport Operation from '../Operation/Operation';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput1: ' ',\n      userInput2: \" \",\n      result: \"TestThree\",\n      operation: \" \",\n      calculation: 0\n    };\n  }\n\n  addition() {\n    this.setState({\n      operation: \"+\"\n    });\n    console.log(\"addition! working!\");\n  } //test function:\n\n\n  handleUserInputOne(event) {\n    this.setState({\n      userInput1: event.target.value\n    });\n  }\n\n  handleUserInputTwo(event) {\n    this.setState({\n      userInput2: event.target.value\n    });\n  }\n\n  calculate() {\n    let operation = this.state.operation;\n\n    switch (operation) {\n      case 'addition':\n        this.setState({\n          calculation: this.state.userInput1 + this.state.userInput2\n        });\n        break;\n\n      case 'substuct':\n        this.setState({\n          playerScore: this.state.playerScore + 1,\n          message: \"Scissors wins paper!\"\n        });\n        break;\n\n      default: // code block\n\n    }\n\n    console.log(\"function is working!\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calculatorContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Result, {\n      inputOne: this.state.userInput1,\n      inputTwo: this.state.userInput2,\n      operation: this.state.operation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(InputOne, {\n      onChange: this.handleUserInputOne.bind(this),\n      value: this.state.userInput1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(InputTwo, {\n      onChange: this.handleUserInputTwo.bind(this),\n      value: this.state.userInput2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(ComputeButton, {\n      click: () => this.calculate(),\n      result: this.state.calculation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"operationsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Operation, {\n      click: () => this.addition(),\n      choice: \"Operation addition height1\",\n      operation: \"+\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      click: () => this.substruct(),\n      choice: \"Operation substruct height1\",\n      operation: \"-\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      click: () => this.multiplication(),\n      choice: \"Operation multiplication height2\",\n      operation: \"*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"operationsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Operation, {\n      click: () => this.mod(),\n      choice: \"Operation mod height1\",\n      operation: \"%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      click: () => this.exp(),\n      choice: \"Operation division height1\",\n      operation: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      click: () => this.exp(),\n      choice: \"Operation exp height2\",\n      operation: \"^\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/daria/development/calculator-app/src/components/Calculator/Calculator.js"],"names":["React","Result","InputOne","InputTwo","ComputeButton","Operation","Calculator","Component","constructor","props","state","userInput1","userInput2","result","operation","calculation","addition","setState","console","log","handleUserInputOne","event","target","value","handleUserInputTwo","calculate","playerScore","message","render","bind","substruct","multiplication","mod","exp"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAGA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,GADH;AAETC,MAAAA,UAAU,EAAC,GAFF;AAGTC,MAAAA,MAAM,EAAC,WAHE;AAITC,MAAAA,SAAS,EAAC,GAJD;AAKTC,MAAAA,WAAW,EAAC;AALH,KAAb;AAOD;;AACHC,EAAAA,QAAQ,GAAG;AACP,SAAKC,QAAL,CAAc;AACVH,MAAAA,SAAS,EAAE;AADD,KAAd;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAhBmC,CAiBpC;;;AACAC,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACxB,SAAKJ,QAAL,CAAc;AAACN,MAAAA,UAAU,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAd;AACD;;AACDC,EAAAA,kBAAkB,CAACH,KAAD,EAAQ;AACxB,SAAKJ,QAAL,CAAc;AAACL,MAAAA,UAAU,EAAES,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAd;AACD;;AAEHE,EAAAA,SAAS,GAAG;AACR,QAAIX,SAAS,GAAG,KAAKJ,KAAL,CAAWI,SAA3B;;AACA,YAAOA,SAAP;AACA,WAAK,UAAL;AACE,aAAKG,QAAL,CAAc;AACVF,UAAAA,WAAW,EAAE,KAAKL,KAAL,CAAWC,UAAX,GAAwB,KAAKD,KAAL,CAAWE;AADtC,SAAd;AAIF;;AAEA,WAAK,UAAL;AACE,aAAKK,QAAL,CAAc;AACVS,UAAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWgB,WAAX,GAAwB,CAD3B;AAEVC,UAAAA,OAAO,EAAC;AAFE,SAAd;AAIF;;AACA,cAdA,CAeI;;AAfJ;;AAiBAT,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACT,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWC,UAA7B;AAA0C,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,UAA/D;AAA2E,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWI,SAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAKA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKM,kBAAL,CAAwBS,IAAxB,CAA6B,IAA7B,CAApB;AAAwD,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKa,kBAAL,CAAwBK,IAAxB,CAA6B,IAA7B,CAApB;AAAwD,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAKI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE,MAAM,KAAKa,SAAL,EAA5B;AAA+C,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWK,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CALA,EAaA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,MAAM,KAAKC,QAAL,EAAxB;AAAyC,MAAA,MAAM,EAAC,4BAAhD;AAA6E,MAAA,SAAS,EAAC,GAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,MAAM,KAAKc,SAAL,EAAxB;AAA0C,MAAA,MAAM,EAAC,6BAAjD;AAA+E,MAAA,SAAS,EAAC,GAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,MAAM,KAAKC,cAAL,EAAxB;AAA+C,MAAA,MAAM,EAAC,kCAAtD;AAAyF,MAAA,SAAS,EAAC,GAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAbA,EAkBA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAY,MAAA,KAAK,EAAE,MAAM,KAAKC,GAAL,EAAzB;AAAqC,MAAA,MAAM,EAAC,uBAA5C;AAAoE,MAAA,SAAS,EAAC,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAY,MAAA,KAAK,EAAE,MAAM,KAAKC,GAAL,EAAzB;AAAqC,MAAA,MAAM,EAAC,4BAA5C;AAAyE,MAAA,SAAS,EAAC,GAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,SAAD;AAAY,MAAA,KAAK,EAAE,MAAM,KAAKA,GAAL,EAAzB;AAAqC,MAAA,MAAM,EAAC,uBAA5C;AAAoE,MAAA,SAAS,EAAC,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAlBA,CADJ,CADJ;AA4BE;;AA5EoC;;AA+E1C,eAAe3B,UAAf","sourcesContent":["// !!IMPORTANT this file contains main functionally of the app and logic \nimport React from 'react';\nimport './Calculator.css';\nimport Result from '../Result/Result';\nimport InputOne from '../InputOne/InputOne'; \nimport InputTwo from '../InputTwo/InputTwo'; \nimport ComputeButton from '../ComputeButton/ComputeButton';\nimport Operation from '../Operation/Operation';\n\n\nclass Calculator extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput1: ' ',\n            userInput2:\" \",\n            result:\"TestThree\",\n            operation:\" \",\n            calculation:0\n          }\n      }\n    addition() {\n        this.setState({\n            operation: \"+\"\n        })\n        console.log(\"addition! working!\")\n      }\n      //test function:\n      handleUserInputOne(event) {\n        this.setState({userInput1: event.target.value}) \n      }\n      handleUserInputTwo(event) {\n        this.setState({userInput2: event.target.value}) \n      }\n\n    calculate() {\n        let operation = this.state.operation; \n        switch(operation) {\n        case 'addition':\n          this.setState({\n              calculation: this.state.userInput1 + this.state.userInput2 \n            });\n       \n        break;\n  \n        case 'substuct':\n          this.setState({\n              playerScore: this.state.playerScore +1,\n              message:\"Scissors wins paper!\"\n            });\n        break;\n        default:\n            // code block\n        }\n        console.log(\"function is working!\")\n    }\n\n    render() {\n    return(\n        <div className=\"calculatorContainer\"> \n            <div className=\"Calculator\"> \n\n            {/* Result will display result of calculation performed by calculator: */}\n            <Result inputOne={this.state.userInput1}  inputTwo={this.state.userInput2} operation={this.state.operation} />\n\n            <div className=\"first\"> \n        \n                <InputOne onChange={this.handleUserInputOne.bind(this)} value={this.state.userInput1}  /> \n                <InputTwo onChange={this.handleUserInputTwo.bind(this)} value={this.state.userInput2}  /> \n          \n                <ComputeButton click={() => this.calculate()}  result={this.state.calculation} /> \n            </div>\n        \n            <div className=\"operationsContainer\"> \n                <Operation click={() => this.addition()} choice=\"Operation addition height1\" operation=\"+\" /> \n                <Operation click={() => this.substruct()} choice=\"Operation substruct height1\" operation=\"-\" /> \n                <Operation click={() => this.multiplication()} choice=\"Operation multiplication height2\" operation=\"*\" /> \n            </div>\n            <div className=\"operationsContainer\"> \n                <Operation  click={() => this.mod()} choice=\"Operation mod height1\" operation=\"%\"  /> \n                <Operation  click={() => this.exp()} choice=\"Operation division height1\" operation=\"/\"  />  \n                <Operation  click={() => this.exp()} choice=\"Operation exp height2\" operation=\"^\" />  \n            </div>\n\n            </div>\n        </div>\n    )}\n}\n\nexport default Calculator; "]},"metadata":{},"sourceType":"module"}